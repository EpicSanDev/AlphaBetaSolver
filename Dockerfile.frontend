# Frontend Dockerfile
FROM nginx:alpine

# Install debugging tools, git and gettext (for envsubst)
RUN apk add --no-cache curl nano git gettext

# Create a temporary directory for copying files
WORKDIR /tmp/frontend

# Copy each file individually to avoid potential issues
COPY frontend/index.html /usr/share/nginx/html/
COPY frontend/styles.css /usr/share/nginx/html/
COPY frontend/api-gateway.js /usr/share/nginx/html/
COPY frontend/strategy-visualizer.js /usr/share/nginx/html/
COPY frontend/404.html /usr/share/nginx/html/
COPY frontend/50x.html /usr/share/nginx/html/

# Make sure the files are not empty and display their content
RUN echo "Verifying files:" && ls -la /usr/share/nginx/html/ && \
    echo "Content of styles.css:" && cat /usr/share/nginx/html/styles.css | head -n 10 && \
    echo "Content of api-gateway.js:" && cat /usr/share/nginx/html/api-gateway.js | head -n 10 && \
    if [ ! -s /usr/share/nginx/html/styles.css ]; then \
      echo "Error: styles.css is empty or not found" && exit 1; \
    fi && \
    if [ ! -s /usr/share/nginx/html/api-gateway.js ]; then \
      echo "Error: api-gateway.js is empty or not found" && exit 1; \
    fi && \
    if [ ! -s /usr/share/nginx/html/strategy-visualizer.js ]; then \
      echo "Error: strategy-visualizer.js is empty or not found" && exit 1; \
    fi

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Use envsubst to replace environment variables in nginx.conf and then start nginx
CMD /bin/sh -c "envsubst < /etc/nginx/nginx.conf > /etc/nginx/nginx.conf.tmp && mv /etc/nginx/nginx.conf.tmp /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
